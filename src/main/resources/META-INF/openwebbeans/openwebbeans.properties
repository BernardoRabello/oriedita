#Licensed to the Apache Software Foundation (ASF) under one
#or more contributor license agreements.  See the NOTICE file
#distributed with this work for additional information
#regarding copyright ownership.  The ASF licenses this file
#to you under the Apache License, Version 2.0 (the
#"License"); you may not use this file except in compliance
#with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License.
#---------------------------------------------------------------
# The default configuration for OpenWebBeans
#
# The default configuration is intended for a JDK and a simple ServletContainer
# like jetty, resin or tomcat.
#
#---------------------------------------------------------------


################################################################################################
################################### DEFAULT SPI CONFIGURATION SECTION ##########################
################################################################################################

# this is the basic configuration, thus it has a very low ordinal of 10
configuration.ordinal=10

################################### Default Container Lifecycle ################################
#Default implementation of org.apache.webbeans.corespi.ContainerLifecycle.
org.apache.webbeans.spi.ContainerLifecycle=org.apache.webbeans.lifecycle.StandaloneLifeCycle
################################################################################################

################################### Default Container Lifecycle ################################
# Use a specific DefiningClassService
# By default we try sun.misc.Unsafe, and if this is not allowed, we do use
# org.apache.webbeans.service.ClassLoaderProxyService as fallback
# org.apache.webbeans.spi.DefiningClassService=org.apache.webbeans.service.ClassLoaderProxyService
################################################################################################

################################### Default JNDI Service #######################################
#Default implementation of org.apache.webbeans.corespi.JNDIService.
org.apache.webbeans.spi.JNDIService=org.apache.webbeans.corespi.se.DefaultJndiService
################################################################################################

################################### Default Bean Definition Archive Service ####################################
org.apache.webbeans.spi.BeanArchiveService=org.apache.webbeans.xml.DefaultBeanArchiveService
################################################################################################

########################### Default ApplicationBoundary Service ################################
# Default implementation of the ApplicationBoundaryService.
# This service defines the 'outer boundary' classloader of each Application.
# For a WAR it is the WebAppClassLoader, for EARs it is the Ear ClassLoader.
# This is to e.g. prevent a producer method for a @RequestScoped EntityManager to use the
# shared tomcat/tomee/etc ClassLoader to be used for loading the generated proxy class
# as this would create mem leaks.
#
org.apache.webbeans.spi.ApplicationBoundaryService=org.apache.webbeans.corespi.se.DefaultApplicationBoundaryService
################################################################################################

################################### Default Scanner Service ####################################
#Default implementation of org.apache.webbeans.corespi.ScannerService.
org.apache.webbeans.spi.ScannerService=org.apache.webbeans.corespi.se.DefaultScannerService
################################################################################################

################################### Default Contexts Service ####################################
#Default implementation of org.apache.webbeans.corespi.ContextsService.
org.apache.webbeans.spi.ContextsService=org.apache.webbeans.corespi.se.DefaultContextsService
################################################################################################

################################### Default Contexts Service ####################################
# Default SecurityService implementation which directly invokes underlying classes
# without using a SecurityManager
org.apache.webbeans.spi.SecurityService=org.apache.webbeans.corespi.security.SimpleSecurityService
################################################################################################

################################ Default Implementation-Loader Service ###########################################
# Service which encapsulates the Service-Loader of Java 1.6+ to allow custom implementations to support Java 1.5
org.apache.webbeans.spi.LoaderService=org.apache.webbeans.service.DefaultLoaderService

################################################################################################
#################################### SEVERAL CONFIGURATION PARAMETERS ##########################
################################################################################################

#################################### Proxy forbidden packages ##################################
# which packages are forbidden for proxies, note that the defaults are always enforced
# so you don't need to add them when you append custom packages
# org.apache.webbeans.generator.proxyReservedPackages = java,javax,sun.misc
################################################################################################

#################################### Use Embedded OpenEJB Discovery ############################
#If it is true, it checks every bean class whether or not represent EJB Bean
org.apache.webbeans.spi.deployer.useEjbMetaDataDiscoveryService=false
################################################################################################

################# Force not having Checked Exceptions in lifecycle methods  ####################
# If it is true, OWB forces that lifecycle methods like @PreDestroy and @PostConstruct must not
# throw any checked exceptions. This is the behaviour which is defined in the EE interceptor
# spec. Since this is sometimes way too restrictive, we allow to relax this rule by configuration
# The default value is 'true' internally.
# ATTENTION: this property works container wide!
org.apache.webbeans.forceNoCheckedExceptions=true
################################################################################################

############################### Implicit Injection Points ######################################
# By default CDI requires to use the @javax.inject.Inject annotation on any injection point.
# OpenWebBeans supports a smarter mode by automatically enable fields as injection points
# if they have a valid Qualifier.
org.apache.webbeans.spi.InjectionPointService=org.apache.webbeans.service.DefaultInjectionPointService
# This feature is off by default for performance reasons
org.apache.webbeans.service.DefaultInjectionPointService.implicitSupport = false
################################################################################################

####################### Archive Centric Beans.xml Scanning #####################################
# If true, will enable decorators, interceptors and alternatives based on the beans.xml
# of the appropriate archive.
org.apache.webbeans.useBDABeansXMLScanner=false
################################################################################################

org.apache.webbeans.generator.javaVersion=auto
org.apache.webbeans.scanExtensionJars = false
