
折線が奇数集まっている点をクリックした場合は折り畳み可能となるように折線追加作業を行う。それ以外の場所をクリックした場合はただの線分追加作業を行う。




折線を描く
任意の点でマウスを左クリックしてドラッグすれば折線が描ける。
奇数本の折線が集まっている頂点をマウス左クリックした場合は、その頂点を折り畳み可能にするために追加する折線の候補が紫色の線で表示される。
もし、その頂点を折り畳み可能にしたいなら、
(1)紫色の線の候補の中から1本をマウス左クリックによって選択する。
(2)次に既存の折線の中から１本をマウス左クリックによって選択すれ。
(3)選択した折線候補が既存の折線まで延長され、折線として追加される。


Draw a crease line
You can draw a crease line by left-clicking and dragging the mouse at any point.
If you left-click a vertex with  odd-numbered crease lines, the candidate crease lines to make the vertex foldable are displayed as purple lines.
If you want to make the vertices foldable, 
(1) select one of the purple lines by left-click.
(2) and select an existing fold line by left-click.
(3) the selected purple line candidate is extended to the already exists crease line and added as a fold line.




折線が奇数集まっている点をクリックした場合は折り畳み可能となるように折線追加作業を行う。それ以外の場所をクリックした場合はただの線分追加作業を行う。
If you click a point where an odd number of crease lines are gathered, add crease lines so that it can be folded. If you click anywhere else, just add a crease line.





（１）マウスの左クリックで1本の折線を選択。マウスを左クリックしてドラッグすれば複数の折線を選択することもできる。
選択された折線は緑色になる。
（２−１）選択されていない折線を左クリックすれば、その線まで選択された折線が延長される。
（２−２）選択された折線を左クリックすれば、選択された折線は他の折線にぶつかるまで延長される。

(1) Left-click the mouse to select one crease line. You can also select multiple crease lines by left-clicking and dragging the mouse.
The selected crease line turns green.
(2-1) If you left-click an unselected crease line, the selected crease line will be extended to that line.
(2-2) If you left-click the selected crease line, the selected crease line will be extended until it hits another crease line.


select_polygon.png

多角形を描いて、折線を選択する。
（１）選択範囲を表す紫色の線分からなる多角形を描く。
（２）閉多角形を描くと、その多角形の境界線を含む内部に完全に含まれる折線が選択される。

Draw a polygon and select crease lines.
(1) Draw a polygon of selection area (purple lines).
(2) When a closed polygon is drawn, crease lines completely contained inside or boundary line of the polygon are selected.


unselect_polygon.png

多角形を描いて、折線を非選択にする。
（１）選択範囲を表す紫色の線分からなる多角形を描く。
（２）閉多角形を描くと、その多角形の境界線を含む内部に完全に含まれる折線が非選択になる。

Draw a polygon and deselect crease lines.
(1) Draw a polygon of selection area (purple lines).
(2) When a closed polygon is drawn, crease lines completely contained inside or boundary line of the polygon are deselected.



select_lX.png

１本の直線を描いて、折線を選択する。
（１）１本の直線を描く。
（２）その直線に完全に含まれる折線及びその直線とX字型で交差する折線が選択される。

Draw a straight line and select crease lines.
(1) Draw a straight line.
(2) Crease lines completely included in the straight line are selected.
And crease lines that intersects the straight line are selected too. 



unselect_lX.png

１本の直線を描いて、折線を非選択にする。
（１）１本の直線を描く。
（２）その直線に完全に含まれる折線及びその直線とX字型で交差する折線が非選択となる。

Draw a straight line and deselect the crease line.
(1) Draw a straight line.
(2) Crease lines completely included in the straight line are deselected.
And crease lines that intersects the straight line are deselected too. 


Del_l.png

１本の直線を描いて、折線を削除する。
（１）１本の直線を描く。
（２）その直線に完全に含まれる折線が削除される。

Draw a straight line and delete crease lines.
(1) Draw a straight line.
(2) Crease lines completely included in the straight line are deleted.


Del_l_X.png

１本の直線を描いて、折線を削除する。
（１）１本の直線を描く。
（２）その直線に完全に含まれる折線とその直線とX字型で交差する折線が削除される。

Draw a straight line and delete crease lines.
(1) Draw a straight line.
(2) Crease lines completely included in the straight line are deleted.
And Crease lines that intersects the straight line are deleted too. 




外周部の折線を選択し外周部が折り畳み可能か判定する。
（１）外周部を表す黄色い線分からなる多角形を描く、
マウスを左クリックしてドラッグしすると黄色い線分が描けるので繰り返し何本かの線分を描き閉多角形を作図する。
＊黄色い多角形の頂点は折線の上に置かないこと。
＊黄色い多角形の辺は折線の頂点を通らないこと。
（２）閉多角形を描くと自動的に判定が実施される
外周部が折り畳み可能なら黄色い線は水色に変化する。外周部が折り畳み不可能なら黄色い線はマゼンタ色（赤紫色）になる。







Select the folding line of the outer peripheral part and judge whether the outer peripheral part can be folded.
(1) Draw a polygon consisting of yellow lines representing the outer circumference.
If you left-click and drag the mouse, you can draw a yellow line segment.Draw several line segments repeatedly to draw a closed polygon.
*Do not place the vertices of the yellow polygon on the crease line.
*The sides of the yellow polygon should not pass through the vertices of the crease line.
(2) When a closed polygon is drawn, the judgment is automatically performed.
If the outer circumference is foldable, the yellow line turns light blue.If the outer circumference is unfoldable, the yellow line will be magenta.



tuika_kinou

追加機能の表示



このボタンを使う前に、あらかじめ緑色の操作対象枠を描いておく。
操作対象枠線がある状態でこのボタンを押すと、背景画像が操作対象枠の中だけになる。

Before using this button, draw a "green operation frame" in advance.
Then, press this button to trim the background image.

オリヒメの後ろに隠れているPC画面をオリヒメウィンドウの背景として表示する。

Display the PC screen hidden behind Orihime as background of Orihime window.


複数の点を選択していくとボロノイ図ができる。
選択した点をもう一度クリックすると、選択が取り消される。
ボロノイ図を折り線に変換するには、紫の四角が描かれたボタンを押す。

Voronoi diagrams can be created by selecting points.
Clicking the selected point again will cancel the selection.
To convert a Voronoi diagram to a crease line, press the button with the purple square drawn.



各種操作中に現れる一時的な線分を、折線か補助線に変換する。

Temporary line segments that appear during various operations are converted to crease lines or auxiliary lines.





操作対象枠を作成する。
このボタンを押して、操作対象枠を作成してから、画像をjpgかpngで出力すると枠内だけ出力される。

Create operation frame.
If you press this button and create an operation frame, then output the image with jpg or png, only the inside of the frame will be output.


色のついたX線グラフを描画します。

Draw colored X-ray graph.


色を濃くする。

Darken color.

色を薄くする。

Reduce color.






_最新新規読み出しでホイールの拡大が聞かないエラーあり　jarでは問題ないようだ。ver3.03120171217








	public JCheckBox ckbox_cp_kaizen_oritatami;//

展開図を折畳む前に展開図の自動修正をする。

Automatically correct the crease pattern before calculating the folded shape.

	public JCheckBox ckbox_select_nokosi;//

折畳み推定操作をしたあとでも、展開図の折線のselect状態が消えないようにする。

The select state of clease lines do not disappear even after the folded shape calculation. 





選択された折線のみで折り畳み推定を行う（あらかじめ、selectボタンで折線を選択しておく）。

Calculate the folded shape with only the selected fold line (Select Crease lines in advance using select button).



２色塗りわけ展開図を描くためには、あらかじめ対象範囲を選択してください（selectボタンを使う）。

To get 2-Colored crease pattern, select the target range in advance (use the select button).



選択された折線で２色塗り分け展開図を作る（あらかじめ、selectボタンで折線を選択しておく）。

Make 2-Colored crease pattern with the selected crease line (Select Crease lines in advance using select button).



折り上がり図の縮尺を微調整する。

Fine adjustment of the scale of folded shape.

折り上がり図の傾き角度を微調整する

Fine adjustment of the inclination angle of folded shape.


Angle restricted line draw.
(1)Select  a crease line.
(2)Then appear extension lines. Select intersection.

Angle restricted line draw.
(1)Select a point.
(2)Select another point.
(3)Then appear extension lines. Select intersection.

Angle restricted line draw.
(1)Select a point.
(2)Select another point.
(3)Then appear extension lines. 
Select a extension line and the line change blue. 
(4)Select a crease line.
(5)New crease line is drawn to intersection of (3)and (4).



Angle restricted line draw.
(1)Select a point.
(2)Select another point.
(3)Then appear extension line. Click somewhere on the extension line.




Turn off or turn on background image.

Turn off or turn on comment, click the dolphin on upper right

Flip over caluculated shape.

Define lattice status.

Angle restricted line draw.

Define angle. 

Output data file.
ORIHIME can output two type data file.
(1) .orh  :ORIHIME original file type.
(2) .cp   :cp file type..(ORIPA can read cp file.)

Input data file.
ORIHIME can read two three data file.
(1) .orh  :ORIHIME original file type.
(2) .cp   :cp file type.
(3) .obj  :obj file type.(ORIPA can output obj file.)






Draw angle bisector line.

(1)Select point A.
(2)Select point B.
(3)Select point C.
(4)Select crease line D.
(5)Bisector line is drawn.



fine lattice
Rough lattice.



add 


Draw line symmetric crease lines  



(0)Select Crease lines in advance using select button.
(1)Select point A and point B.
(2)Then line symmetric crease lines is drawn.


Draw lines toward inner center.
(1)Select point A.
(2)Select point B.
(3)Select point C.
(4)Three lines toward inner center are drawn.




Move calculated shape.


Zoom in calculated shape. 


Rotate(clockwise) calculated shape. 

Rotate(Counterclockwise) calculated shape. 
 rotation



Modify calculated shape. 


Draw wire graph.

Draw X-ray graph.
X-ray


Throw away calculated shape. 

Increase or decrease width of crease lines.




line symmetric crease lines


Draw line symmetric crease line.
(1)Select point A.
(2)Select point B.
(3)Select point C.
(4)Then line symmetric crease line of BA is drawn (axis of symmetry:BC).


Lengthen crease line.

(1)Select a crease line.
(2)Select another crease line.
(3)(1) is Lengthen to intersection of (1)and (2).


Chande Crease line type 
red(mountain) to blue(valley).

blue(valley) to black(edge).
black(edge) to red(mountain).


Draw crease line (restricted)
(1)Push mouse button near any lattice point or end point of another crease line.
(2)move mouse.
(3)Release mouse button near any lattice point or end point of another crease line.


Delete crease line one by one.


Draw perpendicular line.
(1)Select point A.
(2)Select crease line B.
(3)New crease line is drawn from A to B.

Recognize crease pattern.


Rotate(clockwise) crease pattern. 

Rotate(Counterclockwise) crease pattern. 

Throw away all data. 
Redo from the start.









Set the dividing number(left side) to crease line(right side).

左側の数字で等分された折線を描く。
Draw lines equally divided by the number at the left side.

左側の数字で等分された格子を描く。
Draw grid equally divided by the number at the left side.





背景の位置を調節。
（１）背景の点Aを選ぶ
（２）背景の点Bを選ぶ
（３）展開図の点Cを選ぶ
（４）展開図の点Dを選ぶ
（５）点Aが点C、点Bが点Dに合うように背景が移動する


Adjust the position of the background.
(1) Select point A on background 
(2) Select point B on background 
(3) Select point C on crease pattern
(4) Select point D on crease pattern
(5) The background moves so that point A matches point C and point B matches point D.






背景が展開図に合わせて動くようにロックオンする。
もう一度押すとロックオフされる。

Lock on so that the background moves according to crease pattern.
Press it again to lock off.


折線をマウスで選択し、削除する。

Select crease line with mouse and delete it.

折線をマウスで選択し、山折線(赤い線)にする。
Select crease line with mouse and set it mountain fold line (red line).

折線をマウスで選択し、谷折線(青い線)にする。
Select crease line with mouse and set it valley fold line (blue line).

折線をマウスで選択し、境界線もしくは山谷未定線(黒い線)にする。
Select the polygonal line with the mouse, and set it edge line or MV-undefined line (black line).



折線をマウスで選択し、折線と相互作用する補助線(暗緑の線)にする。
Select the polygonal line with the mouse, and set it auxiliary line that interferes with a crease line. (dark green line).





check1
展開図の問題点をチェック（折線が重なっている場合）
問題がある折線はセレクト状態になる。
チェックを自動修正するには右隣の「fix1」を押す。
チェックを手動修正するには「del_sel_L」を押して折線を再入力。
何もせず、チェックを消すには「uns_al」を押す。

Check problems in crease pattern (when some crease lines overlap)
crease lines having a problem became select state.
To fix the problem automatically, press "fix1" on the right.
To fix the problem manually Press "del_sel_L" and re-enter the crease line.
To clear the check(to do nothing), press "uns_al" 


fix1

チェック1を自動修正する。
To fix the problem (Check1) automatically.

check2
展開図の問題点をチェック（折線がT字状になっている場合）
問題がある折線はセレクト状態になる。
チェックを自動修正するには右隣の「fix2」を押す。
チェックを手動修正するには「del_sel_L」を押して折線を再入力。
何もせず、チェックを消すには「uns_al」を押す。

Check problems in crease pattern (when twe crease lines are T-shaped)
crease lines having a problem became select state.
To fix the problem automatically, press "fix1" on the right.
To fix the problem manually Press "del_sel_L" and re-enter the crease line.
To clear the check(to do nothing), press "uns_al" 


fix2

チェック2を自動修正する。
To fix the problem (Check2) automatically.

check3
展開図の問題点をチェック（頂点の異常）
問題がある頂点を持つ折線はセレクト状態になる。
チェックを手動修正するには「del_sel_L」を押して折線を再入力。
何もせず、チェックを消すには「uns_al」を押す。

Check problems in crease pattern (abnormal vertex)
crease lines having abnormal vertex became select state.
To fix the problem manually Press "del_sel_L" and re-enter the crease line.
To clear the check(to do nothing), press "uns_al" 





Check problems in development chart (abnormal vertex abnormality)
A polygonal line having a vertex with a problem is in a select state.
To correct the check manually Press "del_sel_L" to re-enter the line.
To do nothing, press "uns_al" to clear the check.




copy_paste_2p2p
コピー先の2点にコピー元の2点が一致するようコピーする。
（０）あらかじめコピー元をセレクトしておく。
（１）コピー元の点Aを選ぶ
（２）コピー元の点Bを選ぶ
（３）コピー先の点Cを選ぶ
（４）コピー先の点Dを選ぶ
（５）点Aが点C、点Bが点Dに合うようにコピペされる。

Copy so that two copy source point matches two copy destination point.
(0) Select Crease lines in advance using select button.
(1) Select copy source point A
(2) Select copy source point B
(3) Select copy destination point C
(4) Select copy destination point D
(5) Copy is made so that point A matches point C and point B matches point D.


move_paste_2p2p
移動先の2点に移動元の2点が一致するよう移動する。
（０）あらかじめ移動元をセレクトしておく。
（１）移動元の点Aを選ぶ
（２）移動元の点Bを選ぶ
（３）移動先の点Cを選ぶ
（４）移動先の点Dを選ぶ
（５）点Aが点C、点Bが点Dに合うように移動される。

Move so that the two points of selected lines matches two destination points.
(1) Select the point A of selected lines
(2) Select the point B of selected lines
(3) Select the destination point C
(4) Select the destination point D
(5) selected lines are moved so that point A matches point C and point B matches point D.


kakusuu_set.png
正多角形の角数をセットする。

Set the number of corners of a regular polygon.

sei_takakukei
正多角形を描く。
（１）点Aを選ぶ。
（２）点Bを選ぶ。
（３）時計回りに正多角形が描かれる。

Draw a regular polygon.
(1) Select point A.
(2) Select point B.
(3) A regular polygon is drawn clockwise.

senbun_naibun_set
折線の内分比をセットする。

Set the internal division ratio of the crease line.


senbun_n_nyuryoku
内分比で分割された折線を描く。

Draw line divided by the interior division ratio.

何回までアンドゥできるかを決める。（折線入力）
Decide how many undo's can be done.(crease line input)



何回までアンドゥできるかを決める。（折線と干渉しない補助線）
Decide how many undo's can be done.(auxiliary line that does not interfere with creas lines)

senbun_yoke_henkan
折線の線種の変更（背景の展開図があるときに使う。マウスを押したとき折線の後ろが見える）
・黒から黒（セレクト状態。緑で上書きされる）。
・黒（セレクト状態）から赤。
・赤から青。
・青から赤。
セレクト状態の黒は、後で「del_sel_al」を押すと一括削除される。

Change line type　(color) of crease line (used when there is background crease pattern. When mouse is pressed, the back of crease line can be seen.)
・From Black to black (select state, overwritten with green).
・From Black (select state) to red.
・From red to blue.
・From blue to red.
If you press "del_sel_al" later, then selected black lines are deleted at once.


fuku_orikaesi.png

入力した線に接する折線の、線対称な折線を描く。

Draw line symmetrical crease lines of crease lines that contacts the input line.

in_L_col_change.png.png

入力した線に含まれる折線を、順に色を変える。
Change the color of crease lines included in the input line.


on_L_col_change.png .png
入力した線と交差する折線を、順に色を変える。

Change the color of crease lines that intersects the input line.


sakananohone.png
入力した線に直交する方向に格子幅の間隔で、繰り返し直線を描く。
ただし、すでにある折線の端点からは直線は描かれない。

Draw repeating crease lines with the interval of the grid width in the direction orthogonal to the input line.
However, crease line is not drawn from the end points of already existing polygonal lines.

senbun_nyuryoku37.png
角度的に制限された折線を描く

Draw angularly restricted crease line.

kakudo_kei_a_tiisaku.png
kakudo_kei_b_tiisaku.png
角度系入力の角度を小さくする。

Angle restricted line draw.
Reduce angle. 

Button_kakudo_kei_a.png
Button_kakudo_kei_b.png
角度系入力の角度を指定する。

Angle restricted line draw.
Define angle. 

kakudo_kei_a_ookiku.png
kakudo_kei_b_ookiku.png
角度系入力の角度を大きくする。

Angle restricted line draw.
Increase angle. 

F_color.png
折り上がり図の表側の色を変える。
Change front side color of folded shape.

B_color.png
折り上がり図の裏側の色を変える。
Change back side color of folded shape.

L_color.png
折り上がり図の線の色を変える。
Change line color of folded shape.



展開図をアンチエイリアス処理する。
Anti-alias processing of crease pattern.

折線と相互作用する補助線を描く。

Draw auxiliary line that interferes with a crease line.


折線と干渉しない補助線の幅を狭くする。

Decrease width of the auxiliary line that does not interfere with creas lines.

折線と干渉しない補助線の幅を広くする。

Increase width of the auxiliary line that does not interfere with creas lines.

折線と相互作用しない補助線を描く。

Draw auxiliary line that does not interferes with a crease lines.

折線と相互作用しない補助線を消す。

Delete auxiliary line that does not interferes with a crease lines.



折線と干渉しない補助線の色をオレンジ色にする

Make the color of the auxiliary line which does not interfere with crease lines orange.





折線と干渉しない補助線の色を黄色にする

Make the color of the auxiliary line which does not interfere with crease lines yellow.

折畳み図に影をつける。

Shadow the calculated shape.

折線の表現様式を変更する。

Change the expression style of crease line.

オリヒメは3種類のデータファイル形式を読める。

Orihime can read three types of data file format.

折線を表示するかしないかを指定する。

Decide whether to display crease line or not.


補助線（水色）を表示するかしないかを指定する。

Decide whether to display the auxiliary line (cyan) or not.

補助線（オレンジ色、黄色）を表示するかしないかを指定する。

Decide whether to display the auxiliary line (orange, yellow) or not.


補助線（オレンジ色、黄色）が一つ前の状態に戻る

undo (auxiliary line (orange, yellow))

補助線（オレンジ色、黄色）が一つ後の状態に進む

redo (auxiliary line (orange, yellow))

文字を表示するかしないかを指定する。

Decide whether to display comments or not.


選択した頂点から折線が奇数本出ているとき、1本の折線を加えて角度的に折畳み可能とする（山谷は無視している）。
（１）頂点を選択する。
（２）加える折線の候補が紫色の線で示される。紫色の線が複数あるときは1本を選ぶ。
（３）すでにある折線から一本を選ぶ。
（４）　（１）の頂点から、（２）と（３）の交点まで折線が描かれる。

If selected vertex has odd number crease lines, one fold line is added to make the vertex angularly foldable (distinction between mountains and valleys is ignored).
(1) Select vertex.
(2) Candidate crease lines are indicated by purple lines. If there are multiple purple lines, select one.
(3) Select a crease line from the existing crease lines.
(4) A crease line is drawn from the vertex(1) to the intersection of (2) and (3).



格子点系の折線か、頂点を折畳み可能にする折線を入力する。
（１）頂点か格子点を選択する。
（２）（１）とは別の頂点か格子点を選択する。もし、加える折線の候補が紫色の線で示されているなら、紫色の線を選ぶこともできる。
（３）すでにある折線から一本を選ぶ。
（４）　（１）の頂点から、（２）と（３）の交点まで折線が描かれる。

Enter a crease line of the grid point system or a crease line enabling the vertex to collapse.
(1) Select vertex or lattice point.
(2) Select a vertex or lattice point different from (1). If purple lines are indicated ,you can also select purple line.
(3) Select a crease line from the existing crease lines.
(4) A crease line is drawn from the vertex(1) to the intersection of (2) and (3).


点aから、折線bに平行となるように、折線cを描く。

（１）頂点か格子点を選択する（点a）。
（２）すでにある折線から一本を選ぶ（線b）。
（３）（２）とは別に、すでにある折線から一本を選ぶ（線c）。
（４）（２）に平行な折線が、点aから、（３）との交点まで描かれる。





A crease line c parallel to line b is drawn from point a.

(1) Select vertex or lattice point (point a).
(2) Choose an crease line (line b).
(3) Pick another crease lines (line c).
(4) A crease line parallel to (2) is drawn from the point a to the point of intersection with (3).



直線状に連結している2本の折線から頂点を削除し、1本の折線にする（２本の折線が同じ色の場合に実施）。

Delete vertices from two linearly connected crease lines to make one crease line (executed when the two crease lines are the same color).


直線状に連結している2本の折線から頂点を削除し、1本の折線にする（２本の折線が違う色の場合でも実行）。

Delete vertices from two linearly connected crease lines to make one crease line  (even if the two crease lines are different colors).




一度に、直線状に連結している2本の折線から頂点をまとめて削除する（２本の折線が同じ色の場合に実施）。

Delete vertices from two linearly connected crease lines to make one crease line (executed when the two crease lines are the same color), at once.


一度に、直線状に連結している2本の折線から頂点をまとめて削除する（２本の折線が違う色の場合でも実行）。

Delete vertices from two linearly connected crease lines to make one crease line  (even if the two crease lines are different colors), at once.


補助線（水色）のみをマウスで選択し、削除する。

Select only auxiliary line (cyan) with mouse and delete it.






円を描き、補助線として使う。


（１）格子点や他の折線の端点近くでマウスボタンを押す。
（中心が決まる）


（２）押したままマウスを適当に動かす。

（３）マウスボタンを別の格子点や他の折線の端点の近くで離す。


（円周が確定する）


Draw a circle and use it as an auxiliary line.

(1) Push mouse button near any lattice point or end point of another crease line.
(The center is determined)

(2) Move mouse.

(3) Release mouse button near any lattice point or end point of another crease line.
(The circumference is determined)








円を描き、補助線として使う。（円の中心と半径を別々に定義する）


（１）格子点や他の折線の端点近くでマウスボタンを押す。
（中心が決まる）


（２）（１）とは別の格子点や他の折線の端点近くでマウスボタンを押す。

（３）押したままマウスを適当に動かす。

（４）マウスボタンを別の格子点や他の折線の端点の近くで離す。


（円周が確定する）


Draw a circle and use it as an auxiliary line.(Define center and radius of circle separately)

(1) Push mouse button near any lattice point or end point of another crease line.
(The center is determined)

(2) Press  another point different from (1).

(3) Move mouse.

(4) Release mouse button near any lattice point or end point of another crease line.
(The circumference is determined)


















3点を選択し、それらの3点を通る円を描く。

Select 3 points and draw a circle passing through these 3 points.









2つの円を選択し、共通接線を描く。

（１）円を選択する。
（２）別の円を選択する。
（３）もし共通な接線が１本だけ存在する場合。（１）と（２）の共通な接線が描かれる。
もし共通な接線が複数存在する場合。それらは紫色の線で示される。それらの紫色の線から1本すきな線を選ぶ


Select two circles and draw a common tangent line.

(1) Select a circle.
(2) Select another circle.
(3) If there is only one common tangent line. A common tangent line of (1) and (2) is drawn.
If there are several common tangent lines. They are indicated by purple lines. Choose a favorite line from those purple lines.



円または線の、反転による像を描く。

（１）円または線を選択する。
（２）基準円として別の円を選択する。
（３）（１）の図形が（２）の反転円によって反転された像を描く。


Draw an image by inversion of a circle or a line.

(1) Select circle or line.
(2) Select another circle as reference circle.
(3) Draw an image　of (1)  which is inverted by the inversion (reference circle is 2).














//x1,y1,r1,   x2,y2,r2
//0,0,r,        xp,yp,R
r=r1;
R=r2;
xp=x2-x1;yp=y2-y1;


//    ---------------------------------------------------------
//                          ---------------------------------
//        -----               -------------   -----   -----       -------------
xq1=r* (xp*(r+R)+yp*Math.sqrt( (xp*xp+yp*yp) - (r+R) * (r+R) ) ) / (xp*xp+yp*yp);//共通内接線
yq1=r* (yp*(r+R)-xp*Math.sqrt( (xp*xp+yp*yp) - (r+R) * (r+R) ) ) / (xp*xp+yp*yp);//共通内接線

xq2=r* (xp*(r+R)-yp*Math.sqrt( (xp*xp+yp*yp) - (r+R) * (r+R) ) ) / (xp*xp+yp*yp);//共通内接線
yq2=r* (yp*(r+R)+xp*Math.sqrt( (xp*xp+yp*yp) - (r+R) * (r+R) ) ) / (xp*xp+yp*yp);//共通内接線

xq3=r* (xp*(r-R)+yp*Math.sqrt( (xp*xp+yp*yp) - (r-R) * (r-R) ) ) / (xp*xp+yp*yp);//共通外接線
yq3=r* (yp*(r-R)-xp*Math.sqrt( (xp*xp+yp*yp) - (r-R) * (r-R) ) ) / (xp*xp+yp*yp);//共通外接線

xq4=r* (xp*(r-R)-yp*Math.sqrt( (xp*xp+yp*yp) - (r-R) * (r-R) ) ) / (xp*xp+yp*yp);//共通外接線
yq4=r* (yp*(r-R)+xp*Math.sqrt( (xp*xp+yp*yp) - (r-R) * (r-R) ) ) / (xp*xp+yp*yp);//共通外接線


xr1=xq1+x1; yr1=yq1+y1;
xr2=xq2+x1; yr2=yq2+y1;
xr3=xq3+x1; yr3=yq3+y1;
xr4=xq4+x1; yr4=yq4+y1;





//--------------------------------


	En moyori_ensyuu =new En(100000.0,100000.0,10.0,8); //マウス最寄の円周を持つ円
	En moyori_step_ensyuu =new En(100000.0,100000.0,10.0,8); //マウス最寄の円周を持つstep円




ten_sagasi

既にある点や線を、マウスの周辺で探す範囲を、黄色で照らす。

この範囲の半径は、格子の幅の4分の1になっている。
格子の幅を変えれば、この範囲も変化する。

Show the search range for points and lines around the mouse with yellow.

The radius of this range is a quarter of the width of lattice.
If lattice width is changed, this range also changes.



折線を指定し、その折線からの距離を指定して平行線を描く
（１）折線を指定する。
（２）展開図上の適当な場所で、マウスのボタンを押して点を指定する。
（３）マウスのボタンを押したまま、別の点の近くに移動する。
（４）マウスのボタンを離す。
（５）追加する平行線の候補が2本、紫の線で描かれるので、好きなほうを選ぶ。

Select crease line and draw a parallel line.
(1) Select crease line.
(2) Select point by pressing mouse button at an appropriate place on crease pattern.
(3) While holding down the mouse button, move to another point.
(4) Release the mouse button.
(5) Two candidates of parallel lines are drawn with purple lines, so choose the one you like.







円を描き、補助線として使う。（自由描画）

（１）好きな場所でマウスボタンを押す。（中心が決まる）
（２）押したままマウスを適当に動かす。
（３）マウスボタンを好きなところで離す。（円周が確定する）

Draw a circle and use it as an auxiliary line. (Free drawing)

(1) Press mouse button at the place you want. (The center is determined)
(2) Move the mouse appropriately while pressing it.
(3) Release the mouse button anywhere you like. (The circumference is determined)



円を選択し、その同心円を描く（幅は線分を描いて決める）
（１）円を選択する。
（２）（１）とは別の格子点や他の折線の端点近くでマウスボタンを押す。
（３）押したままマウスを適当に動かし線分を描く。
（４）マウスボタンを別の格子点や他の折線の端点の近くで離す。


Select circle and draw concentric circle (Width is decided by drawing line)
(1) Select a circle.
(2) Press the mouse button near a grid point or end point of any line.
(3) While holding down, move the mouse appropriately and a line is drawn .
(4) Release the mouse button near another grid point or end of line.


円を選択し、その同心円を描く（幅は他の2つの円を指定して決める）
（１）円Aを選択する。
（２）円Bを選択する。
（３）円Cを選択する。
（４）円Aの同心円として円Dが描かれる。円Dと円Aの半径の差は、円Cと円Bの半径の差に等しい。


Select a circle and draw the concentric circle (the width is determined by nother two circles)
(1) Select circle A.
(2) Select circle B.
(3) Select circle C.
(4) Circle D is drawn as a concentric circle of circle A. The difference between the radii of circle D and circle A is equal to the difference between the radii of circle C and circle B.



2つの円を選択し、それぞれの同心円を描く（同心円同士は接する。それぞれの同心円と元の円の間の幅は等しい。）
（１）円Aを選択する。
（２）円Bを選択する。
（３）それぞれの同心円が描かれる。


Select two circles then draw each concentric circle (concentric circles contact each other, the width between each concentric circle and the original circle is equal)
(1) Select circle A.
(2) Select circle B.
(3) Each concentric circle is drawn.



マウスで指定する点と、マウスポインタの位置とを、ずらす。

The point specified by the mouse is shifted from the position of the mouse pointer.




マウスをホイールマウスとして使用するかどうかを決める。
ここがONの場合以下の機能が追加される。
（１）ホイールを回転すると、展開図が拡大縮小する。
（２）ホイールをクリックしマウスを動かすと、展開図が移動する。
（３）右クリックすると、消しゴム機能が使える。

Decide whether to use mouse as wheel mouse.
When this is ON, the following functions are added.
(1) When the wheel is rotated, CP is enlarged or reduced.
(2) Click on the wheel and move the mouse, CP moves.
(3) Right click, eraser function can be used.


左側の3つのボックスに、それぞれ任意の角度を指定し、対応する線を角度系入力機能で描く。

Define arbitrary angles in left three boxes then corresponding lines can be drawn with angle system input function.




格子を変形するパラメータをセットする。
（2行上が、縦倍率、1行上が、横倍率、この行が縦と横の角度）
なお、縦倍率が1.0以外、または横倍率が1.0以外、または角度が90度以外のときは。格子は用紙の枠外にも描かれる。

Set parameters for lattice.
(2 rows above, vertical magnification, 1 row above, horizontal magnification, this row is angle)
If vertical magnification isn't 1.0 or the lateral magnification isn't 1.0 or angle isn't 90 degrees then grid is drawn insaid and outside of the quare frame.




格子表示が細かい場合用の入力補助機能を利用する。


Use input assist function for fine grid.










	int i_kouho_dankai;//折線を描く手順のどの候補かの情報を格納
	int i_en_kouho_dankai;//円を描く手順のどの候補かの情報を格納
	Senbun s_kouho[] = new Senbun[16];//描画時の選択候補表示用に使う。s_kouho[0] は実際は使わず、s_kouho[1]から使う。
	En e_kouho[] = new En[16];//描画時の選択候補表示用に使う。e_kouho[0] は実際は使わず、e_step[1]から使う。







keisan_tyuusi 
折畳推定の計算を中止する。

このボタンを押すと、ダイアログが開き、展開図を保存するかどうかを聞いてくる。
ダイアログの左側のボタンを選ぶと、展開図を保存した後で、折畳推定の計算を中止する。
ダイアログの中央のボタンを選ぶと、展開図を保存せずに折畳推定の計算を中止する。
ダイアログの右側のボタンを選ぶと、折畳推定の計算を続行する。

Cancel calculation of folded shape estimation.

When you press this button, a dialog opens and asking if you want to save crease pattern.
If you select left button of the dialog, after saving crease pattern, calculation is stopped.
If you select center button of the dialog, calculation is stopped without saving crease pattern.
If you select right button of the dialog, continue calculation of folded shape estimation.



格子の線を一定の間隔で色変えする場合に、色違いの線の位置を移動する。
When changing the color of grid lines at regular intervals, determine the interval.


格子の線を一定の間隔で色変えする場合に、色違いの線の位置を移動する。
When changing the color of grid lines at fixed intervals, move the position of the different color lines.





	JCheckBox ckbox_mejirusi;//十字や基準面などの目印画線
	JCheckBox ckbox_cp_ue;//展開図を折り上がり予想図の上に描く
	JCheckBox ckbox_oritatami_keika;//折り上がり予想の途中経過の書き出し


ここをオンにすると、折り上がり予想図の前面に展開図が描かれる。
Crease pattern is drawn on the front of calculated shape.


基準面の目印の円や、移動中心の目印の十字を表示する。
Display a circle as mark of the standard face and display cross as movement center mark.



折畳み推定の途中経過を表示する。
Display progress of calculation for folding estimation.


格子の線幅を狭くする。

Decrease width of lattice line.

格子の線幅を広くする。

Increase width of lattice line.

格子の線の色を変える。

Change line color of lattice.

格子の目盛り線の色を変える。

Change scale line color of lattice.



更に、別の折り畳み方を100個探し、それぞれを画像ファイルに保存する。

In addition, 100 other folded shapes are calculated and each is saved to image files.


指定された順番の折畳み図を表示する。

Display the calculated shape in specified order number.


頂点の折り畳み可能性チェックの、警告マークの色を濃くする。

Darken the color of the warning mark of the vertex foldability check.

頂点の折り畳み可能性チェックの、警告マークの色を薄くする。

Reduce the warning mark color of vertex foldability check.



マウスで選択した円の色を変える。

Change the color of the circle selected with the mouse.


円の色を変えるための色指定。

Color designation to change the color of the circle.


























	public Memo getMemo_for_kakidasi(){
		Memo memo_temp = new Memo();memo_temp.set(ori_s.getMemo()); 
		memo_temp.addMemo(hoj_s.h_getMemo());
		return memo_temp ; 
	}

	public void setMemo_for_yomikomi(Memo memo1){ ori_s.setMemo(memo1); hoj_s.h_setMemo(memo1);}


	public Memo getMemo(String s_title){return ori_s.getMemo(s_title); }

	public String setMemo(Memo memo1){ return ori_s.setMemo( memo1); }


es1.setMemo_for_yomikomi(memo_temp);es1.kiroku();

es1.getMemo_for_kakidasi());es1.kiroku();


	public void kiroku(){
		//ori_s.addsenbun  delsenbunを実施しているところでcheckを実施
		if(i_check1==1){check1(0.001,0.5);}
		if(i_check2==1){check2(0.01,0.5);}
		if(i_check3==1){check3(0.0001);}
		if(i_check4==1){check4(0.0001);}

		Ubox.kiroku(getMemo(s_title));
	}


	public String undo(){

		s_title=setMemo(Ubox.undo());


		return s_title;
	}


























		memo1.addGyou("	<camera_ichi_x>"+camera.get_camera_ichi_x()+</camera_ichi_x>);
		memo1.addGyou("	<camera_ichi_y>"+camera.get_camera_ichi_y()+</camera_ichi_y>);
		memo1.addGyou("	<camera_kakudo>"+camera.get_camera_kakudo()+</camera_kakudo>);
		memo1.addGyou("	<camera_kagami>"+camera.get_camera_kagami()+</camera_kagami>);
		memo1.addGyou("	<camera_bairitsu_x>"+camera.get_camera_bairitsu_x()+</camera_bairitsu_x>);
		memo1.addGyou("	<camera_bairitsu_y>"+camera.get_camera_bairitsu_y()+</camera_bairitsu_y>);
		memo1.addGyou("	<hyouji_ichi_x>"+camera.get_hyouji_ichi_x()+</hyouji_ichi_x>);
		memo1.addGyou("	<hyouji_ichi_y>"+camera.get_hyouji_ichi_y()+</hyouji_ichi_y>);







	d_kousi_x_a
	d_kousi_x_b
	d_kousi_x_c
	d_kousi_y_a
	d_kousi_y_b
	d_kousi_y_c

	d_kousi_kakud

	double d_kousi_x_nagasa
	double d_kousi_y_nagasa




		memo1.addGyou("	<i_kitei_jyoutai>"+get_i_kitei_jyoutai()+"</i_kitei_jyoutai>");



		memo1.addGyou("	<d_kousi_x_a>"+orihime_ap.d_kousi_x_a+"</d_kousi_x_a>");
		memo1.addGyou("	<d_kousi_x_b>"+orihime_ap.d_kousi_x_b+"</d_kousi_x_b>");
		memo1.addGyou("	<d_kousi_x_c>"+orihime_ap.d_kousi_x_c+"</d_kousi_x_c>");
		memo1.addGyou("	<d_kousi_y_a>"+orihime_ap.d_kousi_y_a+"</d_kousi_y_a>");
		memo1.addGyou("	<d_kousi_y_b>"+orihime_ap.d_kousi_y_b+"</d_kousi_y_b>");
		memo1.addGyou("	<d_kousi_y_c>"+orihime_ap.d_kousi_y_c+"</d_kousi_y_c>");
		memo1.addGyou("	<d_kousi_kakud>"+orihime_ap.d_kousi_kakud+"</d_kousi_kakud>");
		memo1.addGyou("	<d_kousi_x_nagasa>"+orihime_ap.d_kousi_x_nagasa+"</d_kousi_x_nagasa>");
		memo1.addGyou("	<d_kousi_y_nagasa>"+orihime_ap.d_kousi_y_nagasa+"</d_kousi_y_nagasa>");

		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");
		memo1.addGyou("	<>"+orihime_ap.+"</>");














//str.valueOf()
        	//camera_of_orisen_nyuuryokuzu	;
		memo1.addGyou("<camera_ichi_x>"+camera.get_camera_ichi_x()+"</camera_ichi_x>");
		memo1.addGyou("<camera_ichi_y>"+camera.get_camera_ichi_y()+"</camera_ichi_y>");
		memo1.addGyou("<camera_kakudo>"+camera.get_camera_kakudo()+"</camera_kakudo>");
		memo1.addGyou("<camera_kagami>"+camera.get_camera_kagami()+"</camera_kagami>");
		memo1.addGyou("<camera_bairitsu_x>"+camera.get_camera_bairitsu_x()+"</camera_bairitsu_x>");
		memo1.addGyou("<camera_bairitsu_y>"+camera.get_camera_bairitsu_y()+"</camera_bairitsu_y>");
		memo1.addGyou("<hyouji_ichi_x>"+camera.get_hyouji_ichi_x()+"</hyouji_ichi_x>");
		memo1.addGyou("<hyouji_ichi_y>"+camera.get_hyouji_ichi_y()+"</hyouji_ichi_y>");

		memo1.addGyou("</camera_of_orisen_nyuuryokuzu>");

/*
		//camera_of_oriagarizu	;
		camera_of_oriagarizu.set_camera_ichi_x(0.0);
		camera_of_oriagarizu.set_camera_ichi_y(0.0);
		camera_of_oriagarizu.set_camera_kakudo(0.0);
		camera_of_oriagarizu.set_camera_kagami(1.0);
		camera_of_oriagarizu.set_camera_bairitsu_x(1.0);
		camera_of_oriagarizu.set_camera_bairitsu_y(1.0);
		camera_of_oriagarizu.set_hyouji_ichi_x(800.0);
		camera_of_oriagarizu.set_hyouji_ichi_y(350.0);



		//camera_of_oriagari_omote	;
		camera_of_oriagari_omote.set_camera_ichi_x(0.0);
		camera_of_oriagari_omote.set_camera_ichi_y(0.0);
		camera_of_oriagari_omote.set_camera_kakudo(0.0);
		camera_of_oriagari_omote.set_camera_kagami(1.0);
		camera_of_oriagari_omote.set_camera_bairitsu_x(1.0);
		camera_of_oriagari_omote.set_camera_bairitsu_y(1.0);
		camera_of_oriagari_omote.set_hyouji_ichi_x(800.0);
		camera_of_oriagari_omote.set_hyouji_ichi_y(350.0);

		//camera_of_oriagari_ura	;
		camera_of_oriagari_ura.set_camera_ichi_x(0.0);
		camera_of_oriagari_ura.set_camera_ichi_y(0.0);
		camera_of_oriagari_ura.set_camera_kakudo(0.0);
		camera_of_oriagari_ura.set_camera_kagami(-1.0);
		camera_of_oriagari_ura.set_camera_bairitsu_x(1.0);
		camera_of_oriagari_ura.set_camera_bairitsu_y(1.0);
		camera_of_oriagari_ura.set_hyouji_ichi_x(850.0);
		camera_of_oriagari_ura.set_hyouji_ichi_y(350.0);
*/
valueOf()

		memo1.addGyou("<Kousi>");

		memo1.addGyou("<i_kitei_jyoutai>"+get_i_kitei_jyoutai()+"</i_kitei_jyoutai>");

		memo1.addGyou("<d_kousi_x_a>"+orihime_ap.d_kousi_x_a+"</d_kousi_x_a>");
		memo1.addGyou("<d_kousi_x_b>"+orihime_ap.d_kousi_x_b+"</d_kousi_x_b>");
		memo1.addGyou("<d_kousi_x_c>"+orihime_ap.d_kousi_x_c+"</d_kousi_x_c>");
		memo1.addGyou("<d_kousi_y_a>"+orihime_ap.d_kousi_y_a+"</d_kousi_y_a>");
		memo1.addGyou("<d_kousi_y_b>"+orihime_ap.d_kousi_y_b+"</d_kousi_y_b>");
		memo1.addGyou("<d_kousi_y_c>"+orihime_ap.d_kousi_y_c+"</d_kousi_y_c>");
		memo1.addGyou("<d_kousi_kakudo>"+orihime_ap.d_kousi_kakudo+"</d_kousi_kakudo>");
		memo1.addGyou("<d_kousi_x_nagasa>"+orihime_ap.d_kousi_x_nagasa+"</d_kousi_x_nagasa>");
		memo1.addGyou("<d_kousi_y_nagasa>"+orihime_ap.d_kousi_y_nagasa+"</d_kousi_y_nagasa>");



		memo1.addGyou("</Kousi>");		
		//return memo1 ; 
	}




		memo1.addGyou("<oriagarizu>");

		memo1.addGyou("<oriagarizu_F_color_R>"+orihime_ap.oriagarizu_F_color.getRed()	+"</oriagarizu_F_color_R>");
		memo1.addGyou("<oriagarizu_F_color_G>"+orihime_ap.oriagarizu_F_color.getGreen()	+"</oriagarizu_F_color_G>");
		memo1.addGyou("<oriagarizu_F_color_B>"+orihime_ap.oriagarizu_F_color.getBlue()	+"</oriagarizu_F_color_B>");

		memo1.addGyou("<oriagarizu_B_color_R>"+orihime_ap.oriagarizu_B_color.getRed()	+"</oriagarizu_B_color_R>");
		memo1.addGyou("<oriagarizu_B_color_G>"+orihime_ap.oriagarizu_B_color.getGreen()	+"</oriagarizu_B_color_G>");
		memo1.addGyou("<oriagarizu_B_color_B>"+orihime_ap.oriagarizu_B_color.getBlue()	+"</oriagarizu_B_color_B>");	 
	 
		memo1.addGyou("<oriagarizu_L_color_R>"+orihime_ap.oriagarizu_L_color.getRed()	+"</oriagarizu_L_color_R>");
		memo1.addGyou("<oriagarizu_L_color_G>"+orihime_ap.oriagarizu_L_color.getGreen()	+"</oriagarizu_L_color_G>");
		memo1.addGyou("<oriagarizu_L_color_B>"+orihime_ap.oriagarizu_L_color.getBlue()	+"</oriagarizu_L_color_B>");


		memo1.addGyou("</oriagarizu>");

		Memo_jyouhou_tuika(memo_temp);

		Memo_jyouhou_toridasi(memo1);



i_cp_or_oriagari
camera_of_oriagari_omote
        Camera camera_of_touka_omote	= new Camera();
        Camera camera_of_touka_ura	= new Camera();


	Camera cam_touka_omote	=new Camera();
	Camera cam_touka_ura	=new Camera();

				if(ts2.naibu_hantei_touka_ura(p)>0){i_cp_or_oriagari=4;}
				if(ts2.naibu_hantei_touka_omote(p)>0){i_cp_or_oriagari=3;}


起動時の条件設定（ボタン設定の直後に実施）
	tenkaizu_syokika(settei_syokika_cp());				//展開図の初期化
		i_undo_suu=20;					//undo回数設定
		i_h_undo_suu=20;				//補助画線のundo回数設定
		memori_kankaku=5;				//格子の目盛間隔の設定
	settei_syokika_yosoku(suitei_syokika());			//折畳予測図の初期化
	Button_kyoutuu_sagyou();			//ボタン共通作業
		repaint();					//リペイント
		img_kaisetu_fname="qqq/a__hajimeni.png";	//ヘルプ表示の初期化
		es1.sokutei_hyouji();				// 測定長さと角度の表示
		es1.setCamera(camera_of_orisen_nyuuryokuzu);	//展開図のカメラの設定
		es1.kiroku();					//最初の記録
		es1.h_kiroku();					//最初の補助画線の記録

								//折り上がり図の色指定
		js.set_F_color(			oriagarizu_F_color); //折り上がり図の表面の色
		Button_F_color.setBackground(	oriagarizu_F_color);	//ボタンの色設定

		js.set_B_color(			oriagarizu_B_color);//折り上がり図の裏面の色
		Button_B_color.setBackground(	oriagarizu_B_color);//ボタンの色設定

		js.set_L_color(			oriagarizu_L_color);		//折り上がり図の線の色
		Button_L_color.setBackground(	oriagarizu_L_color);		//ボタンの色設定





全操作廃棄 (ﾉToT)ﾉ ┫:･'.::･
			
			tenkaizu_syokika(settei_syokika_cp());//展開図の初期化
			settei_syokika_yosoku(suitei_syokika());//折畳予測図のの初期化
			Button_kyoutuu_sagyou();
			repaint();
			i_mouse_modeA=1;
			es1.kiroku();
			es1.h_kiroku();



折り上がり予想の廃棄
			settei_syokika_yosoku();
			Button_kyoutuu_sagyou();
			repaint();









// -------------------------------------------------------------------
//cpを折畳み前に自動改善する
	ckbox_cp_kaizen_oritatami = new JCheckBox("");
	ckbox_cp_kaizen_oritatami.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { 
			img_kaisetu_fname=
   "qqq/ckbox_cp_kaizen_oritatami.png";readImageFromFile3();

			repaint();   
	}});
	ckbox_cp_kaizen_oritatami.setIcon(	 new ImageIcon(getClass().getClassLoader().getResource(
   "ppp/ckbox_cp_kaizen_oritatami.png")));
	ckbox_cp_kaizen_oritatami.setSelectedIcon(new ImageIcon(getClass().getClassLoader().getResource(
   "ppp/ckbox_cp_kaizen_oritatami.png")));
	ckbox_cp_kaizen_oritatami.setMargin(new Insets(0,0,0,0));
			pnln13.add(
	ckbox_cp_kaizen_oritatami);

// -------------------------------------------------------------------
//select状態を他の操作をしてもなるべく残す
	ckbox_select_nokosi = new JCheckBox("");
	ckbox_select_nokosi.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { 
			img_kaisetu_fname=
   "qqq/ckbox_select_nokosi.png";readImageFromFile3();

			repaint();   
	}});
	ckbox_select_nokosi.setIcon(	 new ImageIcon(getClass().getClassLoader().getResource(
   "ppp/ckbox_select_nokosi.png")));
	ckbox_select_nokosi.setSelectedIcon(new ImageIcon(getClass().getClassLoader().getResource(
   "ppp/ckbox_select_nokosi.png")));
	ckbox_select_nokosi.setMargin(new Insets(0,0,0,0));
			pnln13.add(
	ckbox_select_nokosi);




			if (ckbox_select_nokosi.isSelected()){   ;}else{es1.unselect_all();}

			if (ckbox_cp_ue.isSelected()){i_cp_ue_hyouji=1;}else{i_cp_ue_hyouji=0;}

	public JCheckBox ckbox_cp_kaizen_oritatami;//cpを折畳み前に自動改善する
	public JCheckBox ckbox_select_nokosi;//select状態を他の操作をしてもなるべく残す


