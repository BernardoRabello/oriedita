
36 36 36 egaki_syokunin
	//マウス操作(i_mouse_modeA==36　でボタンを押したとき)時の作業----------------------------------------------------
	public void mPressed_A_36(Ten p0) {
		i_egaki_dankai=1;
		p.set(camera.TV2object(p0));
		moyori_ten.set(get_moyori_ten(p));
		if(p.kyori(moyori_ten)>d_hantei_haba){moyori_ten.set(p);}
		s_step[1].set(p,moyori_ten);s_step[1].setcolor(icol);
	}





	//マウス操作(i_mouse_modeA==36　でボタンを離したとき)を行う関数----------------------------------------------------
	public void mReleased_A_36(Ten p0) {

		Narabebako_int_double nbox =new Narabebako_int_double();

		if(i_egaki_dankai==1){	
			i_egaki_dankai=0;

			p.set(camera.TV2object(p0));
			moyori_ten.set(get_moyori_ten(p));
			if(p.kyori(moyori_ten)>d_hantei_haba){moyori_ten.set(p);}
			s_step[1].seta(moyori_ten);

			if(s_step[1].getnagasa()>0.00000001){
				for (int i=1; i<=ori_s.getsousuu(); i++ ){
					int i_senbun_kousa_hantei=oc.senbun_kousa_hantei(ori_s.get(i),s_step[1],0.0001,0.0001);
					int i_jikkou=0;
					if(i_senbun_kousa_hantei== 1 ){ i_jikkou=1;}
					if(i_senbun_kousa_hantei== 27 ){ i_jikkou=1;}
					if(i_senbun_kousa_hantei== 28 ){ i_jikkou=1;}

					if( i_jikkou==1){
						int_double i_d	=new int_double(i,oc.kyori(s_step[1].getb(),oc.kouten_motome(ori_s.get(i),s_step[1])   ) );
						nbox.ire_i_tiisaijyun(i_d);	
					}
				}
					
				System.out.println("i_d_sousuu"+nbox.getsousuu());

				int icol_temp=icol;

				for (int i=1; i<=nbox.getsousuu(); i++ ){
					ori_s.setcolor(nbox.get_int(i),icol_temp);

					if(icol_temp==1){icol_temp=2;
					}else if(icol_temp==2){icol_temp=1;
					}
				}	
				kiroku();
			}
		}
	}

























AP

// *******西***********************************************************************
				Button_M_nisuru 		= new JButton(	" "	);
				Button_M_nisuru.addActionListener(new ActionListener(){public void actionPerformed(ActionEvent e) { 
	 img_kaisetu_fname="qqq/M_nisuru.png";readImageFromFile3();
						Button_irokesi();
				Button_M_nisuru.setForeground(Color.black);
				Button_M_nisuru.setBackground(Color.red);
						//icol=1;es1.setcolor(icol);
						i_mouse_modeA=23;
						es1.unselect_all();Button_kyoutuu_sagyou();repaint(); 



		 }}); pnlw8.add(Button_M_nisuru);
				Button_M_nisuru.setBackground(Color.white);
				Button_M_nisuru.setMargin(new Insets(0,0,0,0));

				Button_M_nisuru.setIcon(new ImageIcon(getClass().getClassLoader().getResource( 
				  "ppp/M_nisuru.png")));

// ******西************************************************************************

		JButton	Button_senbun_henkan2	= new JButton(	""	);//new JButton(	"L_chan"	);
Button_senbun_henkan2.addActionListener(new ActionListener(){public void actionPerformed(ActionEvent e) { 

		img_kaisetu_fname="qqq/senbun_henkan2.png";readImageFromFile3();
			i_mouse_modeA=58;
			es1.unselect_all();Button_kyoutuu_sagyou();repaint(); 
		}}); pnlw28.add(Button_senbun_henkan2);

		Button_senbun_henkan2.setMargin(new Insets(0,0,0,0));
		Button_senbun_henkan2.setIcon(new ImageIcon(getClass().getClassLoader().getResource( 
		  "ppp/senbun_henkan2.png")));



// ******西************************************************************************                                                                                                                                                     



Egaki_Syokunin

//-------------------------
//23 23 23 23 23
	//マウス操作(i_mouse_modeA==23 "->M" でボタンを押したとき)時の作業----------------------------------------------------
	public void mPressed_A_23(Ten p0) {mPressed_A_19(p0) ;}

	//マウス操作(i_mouse_modeA==23でドラッグしたとき)を行う関数----------------------------------------------------
	public void mDragged_A_23(Ten p0) { mDragged_A_19( p0) ;}

	//マウス操作(i_mouse_modeA==23 でボタンを離したとき)を行う関数----------------------------------------------------
	public void mReleased_A_23(Ten p0) {//ここの処理の終わりに fix2(0.001,0.5);　をするのは、元から折線だったものと、補助線から変換した折線との組合せで頻発するT字型不接続を修正するため
		i_egaki_dankai=0;

		if(p19_1.kyori(p0)>0.000001){//現状では赤を赤に変えたときもUNDO用に記録されてしまう20161218
			if(M_nisuru(p19_1,p0)!=0){ fix2(0.001,0.5); kiroku(); }
		}
		if(p19_1.kyori(p0)<=0.000001){//現状では赤を赤に変えたときもUNDO用に記録されてしまう20161218
			Ten p =new Ten(); p.set(camera.TV2object(p0));
			if(ori_s.mottomo_tikai_senbun_kyori(p)<d_hantei_haba){//点pに最も近い線分の番号での、その距離を返す	public double mottomo_tikai_senbun_kyori(Ten p)
				ori_s.setcolor(ori_s.mottomo_tikai_senbun_sagasi(p),1);
		 		 fix2(0.001,0.5); kiroku();
			}
		}

	}

//------

public int M_nisuru(Ten p0a,Ten p0b){
	Ten p0_a =new Ten();	Ten p0_b =new Ten();	Ten p0_c =new Ten();	Ten p0_d =new Ten();
	Ten p_a =new Ten();	Ten p_b =new Ten();	Ten p_c =new Ten();	Ten p_d =new Ten();
	p0_a.set( p0a.getx(),p0a.gety() );	p0_b.set( p0a.getx(),p0b.gety() );	p0_c.set( p0b.getx(),p0b.gety() );	p0_d.set( p0b.getx(),p0a.gety() );
	p_a.set(camera.TV2object(p0_a));p_b.set(camera.TV2object(p0_b));p_c.set(camera.TV2object(p0_c));p_d.set(camera.TV2object(p0_d));
	return ori_s.M_nisuru(p_a,p_b,p_c,p_d);
}
//--------------------
//--------------------
//58 58 58 58 58 58 58 58 58 58
	public void mPressed_A_58(Ten p0) {	}//マウス操作(i_mouse_modeA==58線_変換　でボタンを押したとき)時の作業
	public void mDragged_A_58(Ten p0) {	}//マウス操作(i_mouse_modeA==58線_変換　でドラッグしたとき)を行う関数

	//マウス操作(i_mouse_modeA==58線_変換　でボタンを離したとき)を行う関数
	public void mReleased_A_58(Ten p0){
		Ten p =new Ten(); p.set(camera.TV2object(p0));

		if(ori_s.mottomo_tikai_senbun_kyori(p)<d_hantei_haba){//点pに最も近い線分の番号での、その距離を返す	public double mottomo_tikai_senbun_kyori(Ten p)
			int minrid;minrid=ori_s.mottomo_tikai_senbun_sagasi(p);
			int ic_temp;
			ic_temp=ori_s.getcolor(minrid);
			if(ic_temp==1){ori_s.setcolor(minrid,2);}
			else if(ic_temp==2){ori_s.setcolor(minrid,1);}

			//ic_temp=ic_temp+1;if(ic_temp==3){ic_temp=0;}
			//ori_s.setcolor(minrid,ic_temp);


			kiroku();
		}

	}








































/*
        JTextArea area = new JTextArea(20, 20);
        area.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent event) {
                    popupMenu(event);
                }
 
                public void mouseReleased(MouseEvent event) {
                    popupMenu(event);
                }
            });

//-----------------

    private void popupMenu(MouseEvent event) {
        if (event.isPopupTrigger()) {
            menu.show(event.getComponent(), event.getX(), event.getY());
        }
    }

// ******************************************************************

		Button	Button_kousa_bunkatu	= new Button(	"交差分割"	);Button_kousa_bunkatu.addActionListener(new ActionListener(){public void actionPerformed(ActionEvent e) { 
			es1.bunkatu_seiri(); 
			Button_kyoutuu_sagyou();repaint(); 
		}}); pnln.add(Button_kousa_bunkatu);




		Button	Button_Ten_awase	= new Button(	"点合わせ"	);Button_Ten_awase.addActionListener(new ActionListener(){public void actionPerformed(ActionEvent e) { 
		//System.out.println(" Ten_awase  r="+r);
			OZ.ts2.Ten_awase( r);
			Button_kyoutuu_sagyou();repaint(); 
		}}); pnln.add(Button_Ten_awase);

		Button	Button_Bou_nose		= new Button(	"棒に乗せ"	);Button_Bou_nose.addActionListener(new ActionListener(){public void actionPerformed(ActionEvent e) { 
			OZ.ts2.Ten_Bou_awase( r); repaint();
		}}); pnln.add(Button_Bou_nose);



// -------------6;2点から等距離線分モード。
		JButton		Button_tou_kyori_senbun	= new JButton(	"tou_kyori"	);
				Button_tou_kyori_senbun.addActionListener(new ActionListener(){public void actionPerformed(ActionEvent e) { 

		img_kaisetu_fname="qqq/tou_kyori_senbun.png";readImageFromFile3();
							i_mouse_modeA=   6    ; 
							es1.unselect_all();Button_kyoutuu_sagyou();repaint(); 
		}}); 
		pnlw2.add(	Button_tou_kyori_senbun);
// -------------6;2点から等距離線分モード。ここまで


		// **********************************************************

			text21.addActionListener(new ActionListener(){public void actionPerformed(ActionEvent e) { 
				//img_kaisetu_fname="qqq/i_kitei_jyoutai.png";readImageFromFile3();
				System.out.println("aaaaaaaasssssddddddd");
				//es1.set_i_kitei_jyoutai(es1.get_i_kitei_jyoutai()+1);
				Button_kyoutuu_sagyou();repaint(); 
			  }}); 

// ****************************************************

//ダイアログのテスト
JLabel label_d = new JLabel("Message");
label_d.setForeground(Color.RED);

JDialog dialog = new JDialog(this , "こんにちは" ,false);//ダイアログのタイトル
dialog.getContentPane().add(label_d);
dialog.setBounds(250,100,300,200);//表示されるダイアログの位置とサイズ

//dialog.show();
dialog.setVisible(true);//ダイアログの表示
//dialog.setVisible(false);

//JOptionPane.showMessageDialog(this, "JOptionPane");


// *******************************************************

			long start = System.currentTimeMillis();
			//"針金図から折る"
			oritatami_suitei_3();
			long stop = System.currentTimeMillis();
			Long L=new Long(stop - start);
			text_kekka=text_kekka+ " 実行にかかった時間は " +L.toString() + " ミリ秒です。";

			repaint(); 
			System.out.print("es1.getsousuu() = ");System.out.println(es1.getsousuu());
			System.out.print("ks2.getsousuu() = ");System.out.println(OZ.ks2.getsousuu());
			System.out.print("ts1.getTensuu() = ");System.out.print(OZ.ts1.getTensuu());
			System.out.print(" : ts1.getBousuu() = ");System.out.print(OZ.ts1.getBousuu());
			System.out.print(" : ts1.getMensuu() = ");System.out.println(OZ.ts1.getMensuu());	
			System.out.print("ts2.getTensuu() = ");System.out.print(OZ.ts2.getTensuu());
			System.out.print(" : ts2.getBousuu() = ");System.out.print(OZ.ts2.getBousuu());
			System.out.print(" : ts2.getMensuu() = ");System.out.println(OZ.ts2.getMensuu());	
			System.out.print("ts3.getTensuu() = ");System.out.print(OZ.ts3.getTensuu());
			System.out.print(" : ts3.getBousuu() = ");System.out.print(OZ.ts3.getBousuu());
			System.out.print(" : ts3.getMensuu() = ");System.out.println(OZ.ts3.getMensuu());	



	//--------------------------------------------------------- 
	void writeImage(){

		FileDialog fd = new FileDialog(this,"file name for Img save",FileDialog.SAVE);
		fd.setVisible(true);
		String fname = fd.getDirectory() + fd.getFile();

		if(fd.getFile()!=  null){
			if(fname.endsWith("png")){
				writeImageFile(1,fname);
			}else if(fname.endsWith("jpg")){  
				writeImageFile(2,fname);
			}else{
				fname=fname+".png";
				writeImageFile(1,fname);
			}
		}

		//	FileWriter fw = new FileWriter(fname);
		//	BufferedWriter bw = new BufferedWriter(fw);
		//	PrintWriter pw = new PrintWriter(bw);		
	}

	//--------------------------------------------------------- 
*/